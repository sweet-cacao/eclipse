package labka22;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.JScrollBar;


public class lele {
	private JFrame frame;
	private JTextField textField;
	private JTextField textField_1;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_1;
	private JTextField textField_2;
	private JTextField textField_3;
	private JTextField textField_4;
	private JTextField textField_5;
	private JTable table;
	private JTable table_1;
	private JTextField textField_6;
	private JTextField textField_7;
	Object[][] matrix1;
	Object[][] matrix2;
	int i;
	int j;
	int i1;
	int j2;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					lele window = new lele();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public lele() {
		
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
		frame = new JFrame();
		frame.getContentPane().setBackground(UIManager.getColor("ToolTip.background"));
		frame.getContentPane().setForeground(UIManager.getColor("ToolBar.floatingForeground"));
		frame.setBounds(100, 100, 700, 1150);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		textField = new JTextField();
		textField.setBounds(28, 31, 130, 26);
		textField.setColumns(10);
		
		textField_1 = new JTextField();
		textField_1.setBounds(28, 85, 130, 26);
		textField_1.setColumns(10);
		
		
		JButton btnNewButton = new JButton("Установить размер\nматрицы 1");
		btnNewButton.setBounds(388, 31, 292, 82);
		btnNewButton.setActionCommand("M1");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setSize(e, textField, textField_1);
			}

			
		});
		
		lblNewLabel = new JLabel("Количество строк в матрице 1");
		lblNewLabel.setBounds(28, 6, 340, 16);
		
		lblNewLabel_1 = new JLabel("Количество столбцов");
		lblNewLabel_1.setBounds(28, 63, 348, 16);
		frame.getContentPane().setLayout(null);
		frame.getContentPane().add(textField);
		frame.getContentPane().add(textField_1);
		frame.getContentPane().add(btnNewButton);
		frame.getContentPane().add(lblNewLabel);
		frame.getContentPane().add(lblNewLabel_1);
		
		textField_2 = new JTextField();
		textField_2.setBounds(28, 171, 130, 26);
		frame.getContentPane().add(textField_2);
		textField_2.setColumns(10);
		
		textField_3 = new JTextField();
		textField_3.setBounds(28, 238, 130, 26);
		frame.getContentPane().add(textField_3);
		textField_3.setColumns(10);
		
		JButton btnNewButton_1 = new JButton("Заполнить матрицу 1");
		btnNewButton_1.setBounds(388, 171, 292, 99);
		frame.getContentPane().add(btnNewButton_1);
		btnNewButton_1.setActionCommand("Fill1");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				fillMatrix(e, textField_2, textField_3);
			}
		});
		
		JLabel label = new JLabel("Начальное значение диапазона");
		label.setBounds(28, 143, 340, 16);
		frame.getContentPane().add(label);
		
		JLabel label_1 = new JLabel("Конечное значение диапазона");
		label_1.setBounds(28, 210, 340, 16);
		frame.getContentPane().add(label_1);
		
		textField_4 = new JTextField();
		textField_4.setBounds(28, 315, 130, 26);
		frame.getContentPane().add(textField_4);
		textField_4.setColumns(10);
		
		textField_5 = new JTextField();
		textField_5.setColumns(10);
		textField_5.setBounds(28, 382, 130, 26);
		frame.getContentPane().add(textField_5);
		
		JButton button = new JButton("Установить размер матрицы 2");
		button.setBounds(388, 315, 292, 99);
		button.setActionCommand("M2");
		frame.getContentPane().add(button);
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setSize(e, textField_4, textField_5);
			}
		});
		
		
		JButton button_1 = new JButton("Очистить значения матрицы 2");
		button_1.setBounds(388, 896, 292, 99);
		frame.getContentPane().add(button_1);
		
		

		
		
		table_1 = new JTable();
		table_1.setBounds(388, 721, 292, 163);
		frame.getContentPane().add(table_1);
		
		JButton button_2 = new JButton("Отобразить матрицу 1");
		button_2.setBackground(new Color(144, 238, 144));
		button_2.setBounds(28, 598, 297, 99);
		frame.getContentPane().add(button_2);
		button_2.setActionCommand("Show1");
		button_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				showMatrix(e, table);
			}

		});
		
		JButton button_3 = new JButton("Заполнить матрицу 2");
		button_3.setBounds(388, 446, 292, 99);
		frame.getContentPane().add(button_3);
		button_3.setActionCommand("Fill2");
		button_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				fillMatrix(e, textField_6, textField_7);
			}
		});
		
		JLabel label_2 = new JLabel("Количество строк в матрице 2");
		label_2.setBounds(28, 287, 340, 16);
		frame.getContentPane().add(label_2);
		
		JLabel label_3 = new JLabel("Количество столбцов");
		label_3.setBounds(28, 354, 340, 16);
		frame.getContentPane().add(label_3);
		
		JButton button_4 = new JButton("Очистить значения матрицы 1");
		button_4.setBounds(28, 896, 292, 99);
		frame.getContentPane().add(button_4);
		
		JButton button_5 = new JButton("Выполнить выбранное действие");
		button_5.setBounds(388, 1006, 292, 99);
		frame.getContentPane().add(button_5);
		
		JRadioButton rdbtnNewRadioButton = new JRadioButton("Сложение матриц");
		rdbtnNewRadioButton.setBounds(28, 1007, 292, 23);
		frame.getContentPane().add(rdbtnNewRadioButton);
		
		JRadioButton rdbtnNewRadioButton_1 = new JRadioButton("Вычитание матриц");
		rdbtnNewRadioButton_1.setBounds(28, 1042, 292, 23);
		frame.getContentPane().add(rdbtnNewRadioButton_1);
		
		JRadioButton rdbtnNewRadioButton_2 = new JRadioButton("Умножение матриц");
		rdbtnNewRadioButton_2.setBounds(28, 1077, 292, 23);
		frame.getContentPane().add(rdbtnNewRadioButton_2);
		
		JButton button_6 = new JButton("Отобразить матрицу 2");
		button_6.setBounds(388, 598, 292, 99);
		frame.getContentPane().add(button_6);
		
		JLabel label_4 = new JLabel("Начальное значение диапазона");
		label_4.setBounds(28, 431, 340, 16);
		frame.getContentPane().add(label_4);
		
		textField_6 = new JTextField();
		textField_6.setColumns(10);
		textField_6.setBounds(28, 456, 130, 26);
		frame.getContentPane().add(textField_6);
		
		JLabel label_5 = new JLabel("Конечное значение диапазона");
		label_5.setBounds(28, 494, 340, 16);
		frame.getContentPane().add(label_5);
		
		textField_7 = new JTextField();
		textField_7.setColumns(10);
		textField_7.setBounds(28, 519, 130, 26);
		frame.getContentPane().add(textField_7);
		

		
		JScrollPane scrollBar_1 = new JScrollPane(table_1);
		scrollBar_1.setBounds(665, 721, 15, 163);
		frame.getContentPane().add(scrollBar_1);
	}
	
	//установка размера матрицы
	private void setSize(ActionEvent e, JTextField textField, JTextField textField_1) {
		JButton b = (JButton)e.getSource();
		try
		{
			
			if (b.getActionCommand() == "M1")
			{
				i = Integer.parseInt(textField.getText().trim());
				j = Integer.parseInt(textField_1.getText().trim());
				textField.setText(null);
				textField_1.setText(null);
				matrix1 = new Object[i][j];
			}
			else
			{
				i1 = Integer.parseInt(textField.getText().trim());
				j2 = Integer.parseInt(textField_1.getText().trim());
				textField.setText(null);
				textField_1.setText(null);
				matrix2 = new Object[i1][j2];
			}
		}
		catch (NumberFormatException nfe)
		{
			JOptionPane.showMessageDialog(null, "Ошибка: неверный формат данных, введите число", "Ошибка", JOptionPane.INFORMATION_MESSAGE );
			textField.setText(null);
			textField_1.setText(null);
		}
	}
	
	private void fillMatrix(ActionEvent e, JTextField textField_2, JTextField textField_3)
	{
		JButton b = (JButton)e.getSource();
		try
		{
			int start = Integer.parseInt(textField_2.getText().trim());
			int end = Integer.parseInt(textField_3.getText().trim());
			int start1 = start;
			textField.setText(null);
			textField_1.setText(null);
			if (b.getActionCommand() == "Fill1")
			{
				for (int k = 0; k < i; k++)
				{
					for (int l = 0; l<j; l++)
					{
						matrix1[k][l] = start;
						start++;
						if (start == end)
						{
							start = start1;
						}
					}
				}
			}
			else
			{
				for (int k = 0; k < i1; k++)
				{
					for (int l = 0; l<j2; l++)
					{
						matrix1[k][l] = start;
						start++;
						if (start == end)
						{
							start = start1;
						}
					}
				}
			}
		}
		catch (NumberFormatException nfe)
		{
			JOptionPane.showMessageDialog(null, "Ошибка: неверный формат данных, введите число", "Ошибка", JOptionPane.INFORMATION_MESSAGE );
			textField.setText(null);
			textField_1.setText(null);
		}
	}
	

	private void showMatrix(ActionEvent e, JTable table) {
		Object[] columnsHeader = new String[j];
		for (Integer k = 0; k < j; k++)
		{
			columnsHeader[k] = "hey" + k.toString();
		}
		table = new JTable(matrix1, columnsHeader);
		JScrollPane scrollBar = new JScrollPane(table);
		
		table.setBounds(28, 721, 297, 163);
		frame.getContentPane().add(table);
		scrollBar.setBounds(310, 721, 15, 163);
		frame.getContentPane().add(scrollBar);
		scrollBar.setVisible(true);
	}
}
